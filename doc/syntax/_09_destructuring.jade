h4 九、解构
h5.subheader destructuring
.feature-content
  h5 1.数组
  h5.subheader with arrays
  pre
    code.javascript
      |var [a, , [b], c] = [5, null, [6]];
      |var d, e;
      |[d,e] = [7,8];
      |console.log(a === 5 && b === 6 && c === undefined
      | && d === 7 && e === 8);
  p 结果为 true。
  h5 2.字符串
  h5.subheader with strings
  pre
    code.javascript
      |var [a, b, c] = "ab";
      |var d, e;
      |[d,e] = "de";
      |console.log(a === "a" && b === "b" && c === undefined
      | && d === "d" && e === "e");
  p 结果为 true。
  h5 3.特殊字符
  h5.subheader with astral plane strings
  pre
    code.javascript
      |var c;
      |[c] = "𠮷𠮶";
      |console.log(c === "𠮷");
  p 结果为 true。
  h5 4.通用迭代器
  h5.subheader with generic iterables
  pre
    code.javascript
      |var [a, b, c] = global.__createIterableObject(1, 2);
      |var d, e;
      |[d, e] = global.__createIterableObject(3, 4);
      |console.log(a === 1 && b === 2 && c === undefined
      | && d === 3 && e === 4);      
  h5 5.通用迭代器的实例
  h5.subheader with instances of generic iterables
  pre
    code.javascript
      |var [a, b, c] = Object.create(global.__createIterableObject(1, 2))
      |var d, e;
      |[d, e] = Object.create(global.__createIterableObject(3, 4));
      |console.log(a === 1 && b === 2 && c === undefined
      | && d === 3 && e === 4);
  h5 6.迭代器关闭
  h5.subheader iterator closing
  pre
    code.javascript
      |var closed = false;
      |var iter = __createIterableObject(1, 2, 3);
      |iter['return'] = function(){ closed = true; return {}; }
      |var [a, b] = iter;
      |console.log(closed);
  h5 7.迭代解构
  h5.subheader iterable destructuring expression
  pre
    code.javascript
      |var a, b, iterable = [1,2];
      |console.log(([a, b] = iterable) === iterable);
  p 结果为 true。
  h5 8.链式迭代解构
  h5.subheader chained iterable destructuring
  pre
    code.javascript
      |var a,b,c,d;
      |[a,b] = [c,d] = [1,2];
      |console.log(a === 1 && b === 2 && c === 1 && d === 2);
  p 结果为 true。
  h5 9.迭代模式中的逗号
  h5.subheader trailing commas in iterable patterns
  pre
    code.javascript
      |var [a,] = [1];
      |console.log(a === 1);
  h5 10.对象
  h5.subheader with objects
  pre
    code.javascript
      |var {c, x:d, e} = {c:7, x:8};
      |var f, g;
      |({f,g} = {f:9,g:10});
      |console.log(c === 7 && d === 8 && e === undefined
      | && f === 9 && g === 10);
      
  p 结果为 true。
  h5 11.原型中的对象解构
  h5.subheader object destructuring with primitives
  pre
    code.javascript
      |var {toFixed} = 2;
      |var {slice} = '';
      |var toString, match;
      |({toString} = 2);
      |({match} = '');
      |console.log(toFixed === Number.prototype.toFixed
      |  && toString === Number.prototype.toString
      |  && slice === String.prototype.slice
      |  && match === String.prototype.match);
  p 结果为 true。
  h5 12.对象中的逗号
  h5.subheader trailing commas in object patterns
  pre
    code.javascript
      |var {a,} = {a:1};
      |console.log(a === 1);
  p 结果为 true。
  h5 13.对象解构表达式
  h5.subheader object destructuring expression
  pre
    code.javascript
      |var a, b, obj = { a:1, b:2 };
      |console.log(({a,b} = obj) === obj);
      
  p 结果为 true。
  h5 14.链式的对象解构
  h5.subheader chained object destructuring
  pre
    code.javascript
      |var a,b,c,d;
      |({a,b} = {c,d} = {a:1,b:2,c:3,d:4});
      |console.log(a === 1 && b === 2 && c === 3 && d === 4);
  p 结果为 true。
  h5 15.null 和 undefined 时抛出异常
  h5.subheader throws on null and undefined
  pre
    code.javascript
      |var status = true;
      |try {
      |var {a} = null;
      | status = false;
      |} catch(e) {
      | console.log('error');
      |}
      |try {
      | var {b} = undefined;
      | status = false;
      |} catch(e) {
      | console.log('error');
      |}
      |console.log(status);
  p 结果为打印两次‘error' 和 一次 true。
  h5 16.计算属性
  h5.subheader computed properties
  pre
    code.javascript
      |var qux = "corge";
      |var { [qux]: grault } = { corge: "garply" };
      |console.log(grault === "garply");
  p 结果为 true。
  h5 17.单个 var 语句中定义多个变量
  h5.subheader multiples in a single var statement
  pre
    code.javascript
      |var [a,b] = [5,6], {c,d} = {c:7,d:8};
      |console.log(a === 5 && b === 6 && c === 7 && d === 8);      
  p 结果为 true。
  h5 18.嵌套
  h5.subheader nested
  pre
    code.javascript
      |var [e, {x:f, g}] = [9, {x:10}];
      |var {h, x:[i]} = {h:11, x:[12]};
      |console.log(e === 9 && f === 10 && g === undefined
      | && h === 11 && i === 12);
  p 结果为 true。
  h5 19.参数
  h5.subheader in parameters
  pre
    code.javascript
      |console.log((function({a, x:b, y:e}, [c, d]) {
      | return a === 1 && b === 2 && c === 3 &&
      | d === 4 && e === undefined;
      |}({a:1, x:2}, [3, 4])));
  p 结果为 true。
  h5 20.new Function() 支持参数解构
  h5.subheader in parameters, new Function() support
  pre
    code.javascript
      |console.log(new Function("{a, x:b, y:e}","[c, d]",
      | "return a === 1 && b === 2 && c === 3 && "
      | + "d === 4 && e === undefined;"
      |)({a:1, x:2}, [3, 4]));
  h5 21.函数的 length 属性
  h5.subheader in parameters, function 'length' property
  pre
    code.javascript
      |console.log(function({a, b}, [c, d]){}.length === 2);
  p 结果为 true。
  h5 22.for-in 循环
  h5.subheader in for-in loop heads
  pre
    code.javascript
      |for(var [i, j, k] in { qux: 1 }) {
      | console.log(i === "q" && j === "u" && k === "x");
      |}
  p 结果为 true。
  h5 23.for-of 循环
  h5.subheader in for-of loop heads
  pre
    code.javascript
      |for(var [i, j, k] of [[1,2,3]]) {
      | console.log(i === 1 && j === 2 && k === 3);
      |}      
  p 结果为 true。
  h5 24.Rest
  h5.subheader rest
  pre
    code.javascript
      |var [a, ...b] = [3, 4, 5];
      |var [c, ...d] = [6];
      |console.log(a === 3 && b instanceof Array && (b + "") === "4,5" &&
      | c === 6 && d instanceof Array && d.length === 0);
  p 结果为 true。
  h5 25.嵌套的 Rest
  h5.subheader nested rest
  pre
    code.javascript
      |var a = [1, 2, 3], first, last;
      |[first, ...[a[2], last]] = a;
      |console.log(first === 1 && last === 3 && (a + "") === "1,2,2");      
  p 结果为 true。
  h5 26.默认
  h5.subheader defaults
  pre
    code.javascript
      |var {a = 1, b = 0, c = 3} = {b:2, c:undefined};
      |console.log(a === 1 && b === 2 && c === 3);
  p 结果为 true。
  h5 27.默认参数
  h5.subheader defaults in parameters
  pre
    code.javascript
      |console.log((function({a = 1, b = 0, c = 3, x:d = 0, y:e = 5, z:f}) {
      | return a === 1 && b === 2 && c === 3 && d === 4 &&
      | e === 5 && f === undefined;
      |}({b:2, c:undefined, x:4})));      
  p 结果为 true。
  h5 28.默认参数与暂时性死区
  h5.subheader defaults, let temporal dead zone
  pre
    code.javascript
      |var status;
      |var {a, b = 2} = {a:1};
      |try {
      | eval("let {c = c} = {};");
      |} catch(e){
      | status = false;
      |}
      |try {
      | eval("let {c = d, d} = {d:1};");
      |} catch(e){
      | status = false;
      |}
      |console.log(a === 1 && b === 2);
      |console.log(status);
  p 结果为 true 和 false。
  h5 29.默认参数，独立 scope
  h5.subheader defaults in parameters, separate scope
  pre
    code.javascript
      |console.log((function({a=function(){
      |  return typeof b === 'undefined';
      |}}){
      |  var b = 1;
      |  return a();
      |}({})));
  //- p 结果为 true/false。
  h5 30.new Function() 支持默认参数
  h5.subheader defaults in parameters, new Function() support
  pre
    code.javascript
      |console.log(new Function("{a = 1, b = 0, c = 3, x:d = 0, y:e = 5, z:f}",
      |  "return a === 1 && b === 2 && c === 3 && d === 4 && "
      |  + "e === 5 && f === undefined;"
      |)({b:2, c:undefined, x:4}));      
